{"version":3,"sources":["assets/markdown/scss.md","assets/markdown/flex.md","assets/markdown/css-layout.md","assets/markdown/cssBem.md","assets/markdown/cssBase.md","assets/markdown/js-es6-aync.md","assets/markdown/js-issue.md","assets/images/carousel sync /^/.*$","assets/images/carousel/1.jpg","assets/images/carousel/2.jpg","assets/images/carousel/b03.jpg","features/todo/TodoList.js","features/todo/Todo.js","components/markdown/MarkDown.js","features/blog/CssScss.js","features/blog/CssFlex.js","features/blog/CssLayout.js","features/blog/CssBem.js","features/blog/CssBase.js","features/blog/JsEs6Async.js","features/blog/JsIssue.js","features/home/Home.js","App.js","index.js","features/todo/todo.module.scss"],"names":["module","exports","map","./1.jpg","./2.jpg","./b03.jpg","./config","./config.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","p","todoItem","width","border","height","lineHeight","borderRadius","padding","textAlign","TodoList","props","context","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDeleteItem","onDelete","_this2","list","react_default","a","createElement","item","TodoList_TodoItem","key","onDeleteItem","name","Component","TodoItem","onClick","style","children","defaultProps","Todo","handlePressEnter","setState","concat","toConsumableArray","state","length","target","value","inputRef","current","filter","React","createRef","className","todoCss","content","input","onPressEnter","ref","todoList","todo_TodoList","MarkDown","esm","options","forceBlock","source","CssScss","markdown_MarkDown","scssMarkDown","CssFlex","flexMarkDown","layoutMarkDown","CssBem","bemMarkDown","CssBase","cssBaseMarkDown","JsEs6Async","jsEs6AyncMarkDown","JsIssue","jsIssueMarkDown","Home","getCarouselImages","carouselConfig","index","image","require","src","SubMenu","Menu","Header","Layout","Content","Footer","Sider","images","Fragment","layout","menu","theme","mode","defaultSelectedKeys","Item","carousel","autoplay","background","defaultOpenKeys","title","class","Link","to","match","path","Home_RouteView","route","RouteView","Switch","Route","component","CssLayout","App","loggedIn","App_RouteView","exact","render","Redirect","withRouter","ReactDOM","HashRouter","src_App","document","getElementById"],"mappings":"2EAAAA,EAAAC,QAAA,uzOCAAD,EAAAC,QAAA,+oQCAAD,EAAAC,QAAA,ikMCAAD,EAAAC,QAAA,o0ICAAD,EAAAC,QAAA,uuYCAAD,EAAAC,QAAA,4yHCAAD,EAAAC,QAAA,8kMCAA,IAAAC,EAAA,CACAC,UAAA,IACAC,UAAA,IACAC,YAAA,IACAC,WAAA,GACAC,gBAAA,IAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAG,EAAAF,GAEA,SAAAC,EAAAF,GACA,IAAAC,EAAAR,EAAAO,GACA,KAAAC,EAAA,IACA,IAAAG,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAEA,MADAI,EAAAE,KAAA,mBACAF,EAEA,OAAAH,EAEAF,EAAAQ,KAAA,WACA,OAAAC,OAAAD,KAAAd,IAEAM,EAAAU,QAAAP,EACAX,EAAAC,QAAAO,EACAA,EAAAE,GAAA,yBC3BAV,EAAAC,QAAiBW,EAAAO,EAAuB,mDCAxCnB,EAAAC,QAAiBW,EAAAO,EAAuB,mDCAxCnB,EAAAC,QAAiBW,EAAAO,EAAuB,yNCGlCC,EAAW,CACfC,MAAO,OACPC,OAAQ,oBACRC,OAAQ,OACRC,WAAY,OACZC,aAAc,MACdC,QAAS,SACTC,UAAW,QAGPC,cACJ,SAAAA,EAAYC,EAAOC,GAAS,IAAAC,EAAA,OAAAd,OAAAe,EAAA,EAAAf,CAAAgB,KAAAL,IAC1BG,EAAAd,OAAAiB,EAAA,EAAAjB,CAAAgB,KAAAhB,OAAAkB,EAAA,EAAAlB,CAAAW,GAAAQ,KAAAH,KAAMJ,KAGRQ,iBAAmB,SAAA3B,GACjBqB,EAAKF,MAAMS,SAAS5B,IALMqB,wEAQnB,IAAAQ,EAAAN,KACDO,EAASP,KAAKJ,MAAdW,KACN,OACEC,EAAAC,EAAAC,cAAA,WACGH,EAAKtC,IAAI,SAAA0C,GAAI,OACZH,EAAAC,EAAAC,cAACE,EAAD,CAAUC,IAAKF,EAAKlC,GAAIqC,aAAc,kBAAMR,EAAKF,iBAAiBO,EAAKlC,MACpEkC,EAAKI,6DAfKC,aAyBnBC,EAAW,SAAArB,GACb,OACEY,EAAAC,EAAAC,cAAA,OAAKQ,QAAStB,EAAMkB,aAAcK,MAAOhC,GACtCS,EAAMwB,WAWbzB,EAAS0B,aAAe,CACtBd,KAAM,IAGOZ,yBCeA2B,cA1Db,SAAAA,EAAY1B,EAAOC,GAAS,IAAAC,EAAA,OAAAd,OAAAe,EAAA,EAAAf,CAAAgB,KAAAsB,IAC1BxB,EAAAd,OAAAiB,EAAA,EAAAjB,CAAAgB,KAAAhB,OAAAkB,EAAA,EAAAlB,CAAAsC,GAAAnB,KAAAH,KAAMJ,KASR2B,iBAAmB,SAAA3C,GACjBkB,EAAK0B,SAAS,CACZjB,KAAI,GAAAkB,OAAAzC,OAAA0C,EAAA,EAAA1C,CAAMc,EAAK6B,MAAMpB,MAAjB,CAAuB,CAAE9B,GAAIqB,EAAK6B,MAAMpB,KAAKqB,OAAS,EAAGb,KAAMnC,EAAEiD,OAAOC,WAE9EhC,EAAKiC,SAASC,QAAQL,MAAMG,MAAQ,IAdVhC,EAmB5BM,iBAAmB,SAAA3B,GACjB,IAAI8B,EAAOT,EAAK6B,MAAMpB,KAAK0B,OAAO,SAAAtB,GAAI,OAAIA,EAAKlC,IAAMA,IACrDqB,EAAK0B,SAAS,CACZjB,KAAMA,KAnBRT,EAAK6B,MAAQ,CACXpB,KAAM,IAGRT,EAAKiC,SAAWG,IAAMC,YAPIrC,wEA2BnB,IACDS,EAASP,KAAK2B,MAAdpB,KAGN,OACEC,EAAAC,EAAAC,cAAA,OAAK0B,UAAWC,IAAQC,SACtB9B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAOC,aAAcxC,KAAKuB,iBAAkBkB,IAAKzC,KAAK+B,YAGxDvB,EAAAC,EAAAC,cAAA,OAAK0B,UAAWC,IAAQK,UACtBlC,EAAAC,EAAAC,cAACiC,EAAD,CAAUpC,KAAMA,EAAMF,SAAUL,KAAKI,yEAvC5BY,mECPb4B,sBACJ,SAAAA,EAAYhD,EAAOC,GAAU,OAAAb,OAAAe,EAAA,EAAAf,CAAAgB,KAAA4C,GAAA5D,OAAAiB,EAAA,EAAAjB,CAAAgB,KAAAhB,OAAAkB,EAAA,EAAAlB,CAAA4D,GAAAzC,KAAAH,KACrBJ,0EAIN,OACEY,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAUT,UAAU,gBAAgBU,QAAS,CAAEC,YAAY,IACxD/C,KAAKJ,MAAMoD,6DATChC,cAsBvB4B,EAASvB,aAAe,CACtB2B,OAAQ,4BAGKJ,0BCbAK,cAXb,SAAAA,EAAYrD,EAAOC,GAAU,OAAAb,OAAAe,EAAA,EAAAf,CAAAgB,KAAAiD,GAAAjE,OAAAiB,EAAA,EAAAjB,CAAAgB,KAAAhB,OAAAkB,EAAA,EAAAlB,CAAAiE,GAAA9C,KAAAH,KACrBJ,0EAIN,OAAOY,EAAAC,EAAAC,cAACwC,EAAD,CAAUF,OAAQG,0DANPnC,+BCYPoC,cAXb,SAAAA,EAAYxD,EAAOC,GAAU,OAAAb,OAAAe,EAAA,EAAAf,CAAAgB,KAAAoD,GAAApE,OAAAiB,EAAA,EAAAjB,CAAAgB,KAAAhB,OAAAkB,EAAA,EAAAlB,CAAAoE,GAAAjD,KAAAH,KACrBJ,0EAIN,OAAOY,EAAAC,EAAAC,cAACwC,EAAD,CAAUF,OAAQK,0DANPrC,+BCYPiC,cAXb,SAAAA,EAAYrD,EAAOC,GAAU,OAAAb,OAAAe,EAAA,EAAAf,CAAAgB,KAAAiD,GAAAjE,OAAAiB,EAAA,EAAAjB,CAAAgB,KAAAhB,OAAAkB,EAAA,EAAAlB,CAAAiE,GAAA9C,KAAAH,KACrBJ,0EAIN,OAAOY,EAAAC,EAAAC,cAACwC,EAAD,CAAUF,OAAQM,0DANPtC,+BCYPuC,cAXb,SAAAA,EAAY3D,EAAOC,GAAU,OAAAb,OAAAe,EAAA,EAAAf,CAAAgB,KAAAuD,GAAAvE,OAAAiB,EAAA,EAAAjB,CAAAgB,KAAAhB,OAAAkB,EAAA,EAAAlB,CAAAuE,GAAApD,KAAAH,KACrBJ,0EAIN,OAAOY,EAAAC,EAAAC,cAACwC,EAAD,CAAUF,OAAQQ,0DANRxC,+BCYNyC,cAXb,SAAAA,EAAY7D,EAAOC,GAAU,OAAAb,OAAAe,EAAA,EAAAf,CAAAgB,KAAAyD,GAAAzE,OAAAiB,EAAA,EAAAjB,CAAAgB,KAAAhB,OAAAkB,EAAA,EAAAlB,CAAAyE,GAAAtD,KAAAH,KACrBJ,0EAIN,OAAOY,EAAAC,EAAAC,cAACwC,EAAD,CAAUF,OAAQU,0DANP1C,+BCYP2C,cAXb,SAAAA,EAAY/D,EAAOC,GAAU,OAAAb,OAAAe,EAAA,EAAAf,CAAAgB,KAAA2D,GAAA3E,OAAAiB,EAAA,EAAAjB,CAAAgB,KAAAhB,OAAAkB,EAAA,EAAAlB,CAAA2E,GAAAxD,KAAAH,KACrBJ,0EAIN,OAAOY,EAAAC,EAAAC,cAACwC,EAAD,CAAUF,OAAQY,0DANJ5C,+BCYV6C,cAXb,SAAAA,EAAYjE,EAAOC,GAAU,OAAAb,OAAAe,EAAA,EAAAf,CAAAgB,KAAA6D,GAAA7E,OAAAiB,EAAA,EAAAjB,CAAAgB,KAAAhB,OAAAkB,EAAA,EAAAlB,CAAA6E,GAAA1D,KAAAH,KACrBJ,0EAIN,OAAOY,EAAAC,EAAAC,cAACwC,EAAD,CAAUF,OAAQc,0DANP9C,qBCYhB+C,eACJ,SAAAA,EAAYnE,EAAOC,GAAS,IAAAC,EAAA,OAAAd,OAAAe,EAAA,EAAAf,CAAAgB,KAAA+D,IAC1BjE,EAAAd,OAAAiB,EAAA,EAAAjB,CAAAgB,KAAAhB,OAAAkB,EAAA,EAAAlB,CAAA+E,GAAA5D,KAAAH,KAAMJ,KAGRoE,kBAAoB,WAClB,OAAOC,EAAe1D,KAAKtC,IAAI,SAAC0C,EAAMuD,GACpC,IAAIC,EAAQC,OAAQ,KAAA3C,OAA4Bd,IAChD,OACEH,EAAAC,EAAAC,cAAA,OAAKG,IAAKqD,GACR1D,EAAAC,EAAAC,cAAA,OAAK2D,IAAKF,EAAO/B,UAAU,qBATPtC,wEAenB,IACCwE,EAAYC,IAAZD,QACAE,EAAmCC,IAAnCD,OAAQE,EAA2BD,IAA3BC,QAASC,EAAkBF,IAAlBE,OAAQC,EAAUH,IAAVG,MAE7BC,EAAS7E,KAAKgE,oBAOlB,OACExD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqE,SAAA,KACEtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,KACEvE,EAAAC,EAAAC,cAAC8D,EAAD,CAAQpC,UAAU,cAChB5B,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,SACf5B,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMC,MAAM,OAAOC,KAAK,aAAaC,oBAAqB,CAAC,KAAMhE,MAAO,CAAE5B,WAAY,SACpFiB,EAAAC,EAAAC,cAACsE,EAAA,EAAKI,KAAN,CAAWvE,IAAI,KAAf,SACAL,EAAAC,EAAAC,cAACsE,EAAA,EAAKI,KAAN,CAAWvE,IAAI,KAAf,SACAL,EAAAC,EAAAC,cAACsE,EAAA,EAAKI,KAAN,CAAWvE,IAAI,KAAf,WAGJL,EAAAC,EAAAC,cAACgE,EAAD,CAAStC,UAAU,YACjB5B,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,oBACb5B,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,YACb5B,EAAAC,EAAAC,cAAC2E,EAAA,EAAD,CAAUC,UAAQ,GAAET,IAEtBrE,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,eACb5B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,uCAEFF,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,SACb5B,EAAAC,EAAAC,cAAA,mEACAF,EAAAC,EAAAC,cAAA,uEACAF,EAAAC,EAAAC,cAAA,8CAKNF,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAQ3C,UAAU,cAChB5B,EAAAC,EAAAC,cAACgE,EAAD,KACElE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAQ3C,UAAU,qBAChB5B,EAAAC,EAAAC,cAACkE,EAAD,CAAOxF,MAAO,IAAK+B,MAAO,CAAEoE,WAAY,SACtC/E,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CACEE,KAAK,SACLC,oBAAqB,CAAC,KACtBK,gBAAiB,CAAC,QAClBrE,MAAO,CAAE7B,OAAQ,SAEjBkB,EAAAC,EAAAC,cAAC4D,EAAD,CACEzD,IAAI,MACJ4E,MACEjF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,KAAGgF,MAAM,sBADX,QAKFlF,EAAAC,EAAAC,cAACsE,EAAA,EAAKI,KAAN,CAAWvE,IAAI,YACbL,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMC,GAAE,GAAAnE,OAAKzB,KAAKJ,MAAMiG,MAAMC,KAAtB,cAAR,iCAEFtF,EAAAC,EAAAC,cAACsE,EAAA,EAAKI,KAAN,CAAWvE,IAAI,YACbL,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMC,GAAE,GAAAnE,OAAKzB,KAAKJ,MAAMiG,MAAMC,KAAtB,cAAR,qBAEFtF,EAAAC,EAAAC,cAACsE,EAAA,EAAKI,KAAN,CAAWvE,IAAI,cAAaL,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMC,GAAE,GAAAnE,OAAKzB,KAAKJ,MAAMiG,MAAMC,KAAtB,gBAAR,4CAC5BtF,EAAAC,EAAAC,cAACsE,EAAA,EAAKI,KAAN,CAAWvE,IAAI,WAAUL,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMC,GAAE,GAAAnE,OAAKzB,KAAKJ,MAAMiG,MAAMC,KAAtB,aAAR,qDACzBtF,EAAAC,EAAAC,cAACsE,EAAA,EAAKI,KAAN,CAAWvE,IAAI,YAAWL,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMC,GAAE,GAAAnE,OAAKzB,KAAKJ,MAAMiG,MAAMC,KAAtB,cAAR,iCAE5BtF,EAAAC,EAAAC,cAAC4D,EAAD,CACEzD,IAAI,OACJ4E,MACEjF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,KAAGgF,MAAM,uBADX,SAMFlF,EAAAC,EAAAC,cAACsE,EAAA,EAAKI,KAAN,CAAWvE,IAAI,KAAf,WACAL,EAAAC,EAAAC,cAACsE,EAAA,EAAKI,KAAN,CAAWvE,IAAI,KAAf,WACAL,EAAAC,EAAAC,cAACsE,EAAA,EAAKI,KAAN,CAAWvE,IAAI,KAAf,WACAL,EAAAC,EAAAC,cAACsE,EAAA,EAAKI,KAAN,CAAWvE,IAAI,KAAf,YAEFL,EAAAC,EAAAC,cAAC4D,EAAD,CACEzD,IAAI,aACJ4E,MACEjF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,KAAGgF,MAAM,qBADX,eAMFlF,EAAAC,EAAAC,cAACsE,EAAA,EAAKI,KAAN,CAAWvE,IAAI,gBAAeL,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMC,GAAE,GAAAnE,OAAKzB,KAAKJ,MAAMiG,MAAMC,KAAtB,kBAAR,yBAC9BtF,EAAAC,EAAAC,cAACsE,EAAA,EAAKI,KAAN,CAAWvE,IAAI,YAAWL,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAMC,GAAE,GAAAnE,OAAKzB,KAAKJ,MAAMiG,MAAMC,KAAtB,cAAR,6DAC1BtF,EAAAC,EAAAC,cAACsE,EAAA,EAAKI,KAAN,CAAWvE,IAAI,MAAf,YACAL,EAAAC,EAAAC,cAACsE,EAAA,EAAKI,KAAN,CAAWvE,IAAI,MAAf,aAEFL,EAAAC,EAAAC,cAAC4D,EAAD,CACEzD,IAAI,MACJ4E,MACEjF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,KAAGgF,MAAM,sBADX,QAMFlF,EAAAC,EAAAC,cAACsE,EAAA,EAAKI,KAAN,CAAWvE,IAAI,KAAf,iDACAL,EAAAC,EAAAC,cAACsE,EAAA,EAAKI,KAAN,CAAWvE,IAAI,MAAf,gFAEFL,EAAAC,EAAAC,cAAC4D,EAAD,CACEzD,IAAI,QACJ4E,MACEjF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,KAAGgF,MAAM,wBADX,UAMFlF,EAAAC,EAAAC,cAACsE,EAAA,EAAKI,KAAN,CAAWvE,IAAI,KAAf,WACAL,EAAAC,EAAAC,cAACsE,EAAA,EAAKI,KAAN,CAAWvE,IAAI,MAAf,YACAL,EAAAC,EAAAC,cAACsE,EAAA,EAAKI,KAAN,CAAWvE,IAAI,MAAf,YACAL,EAAAC,EAAAC,cAACsE,EAAA,EAAKI,KAAN,CAAWvE,IAAI,MAAf,eAINL,EAAAC,EAAAC,cAACgE,EAAD,CAAStC,UAAU,sBACjB5B,EAAAC,EAAAC,cAACqF,GAAD,CAAWC,MAAOhG,KAAKJ,MAAMiG,MAAMC,YAM7CtF,EAAAC,EAAAC,cAACiE,EAAD,CAAQvC,UAAU,cAAlB,gGAlJSpB,aA6JfiF,GAAY,SAAArG,GACd,OAAKA,EAAMoG,MAITxF,EAAAC,EAAAC,cAACwF,EAAA,EAAD,KACE1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAOL,KAAI,GAAArE,OAAK7B,EAAMoG,MAAX,aAA6BI,UAAWnD,IACnDzC,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAOL,KAAI,GAAArE,OAAK7B,EAAMoG,MAAX,aAA6BI,UAAWhD,IACnD5C,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAOL,KAAI,GAAArE,OAAK7B,EAAMoG,MAAX,eAA+BI,UAAWC,IACrD7F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAOL,KAAI,GAAArE,OAAK7B,EAAMoG,MAAX,YAA4BI,UAAW7C,IAClD/C,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAOL,KAAI,GAAArE,OAAK7B,EAAMoG,MAAX,aAA6BI,UAAW3C,IACnDjD,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAOL,KAAI,GAAArE,OAAK7B,EAAMoG,MAAX,iBAAiCI,UAAWzC,IACvDnD,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAOL,KAAI,GAAArE,OAAK7B,EAAMoG,MAAX,aAA6BI,UAAWvC,KAV9C,MAeIE,MCzLTuC,eACJ,SAAAA,EAAY1G,EAAOC,GAAS,IAAAC,EAAA,OAAAd,OAAAe,EAAA,EAAAf,CAAAgB,KAAAsG,IAC1BxG,EAAAd,OAAAiB,EAAA,EAAAjB,CAAAgB,KAAAhB,OAAAkB,EAAA,EAAAlB,CAAAsH,GAAAnG,KAAAH,KAAMJ,KAED+B,MAAQ,CACX4E,UAAU,GAJczG,wEAQ1B,OACEU,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,IACb5B,EAAAC,EAAAC,cAAC8F,GAAD,CAAWD,SAAUvG,KAAK2B,MAAM4E,mBAXtBvF,aAiBdiF,GAAY,SAAArG,GACd,OACEY,EAAAC,EAAAC,cAACwF,EAAA,EAAD,KACE1F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAOM,OAAK,EAACX,KAAK,IAAIY,OAAQ,kBAAO9G,EAAM2G,SAAW/F,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CAAUf,GAAG,UAAapF,EAAAC,EAAAC,cAACiG,EAAA,EAAD,CAAUf,GAAG,cAC7FpF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAOL,KAAK,QAAQM,UAAWrC,KAC/BvD,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAAOL,KAAK,QAAQM,UAAW9E,MAKtBsF,eAAWN,cCtB1BO,IAASH,OAELlG,EAAAC,EAAAC,cAACoG,GAAA,EAAD,KACEtG,EAAAC,EAAAC,cAACqG,GAAD,OAGJC,SAASC,eAAe,0FCjB1BlJ,EAAAC,QAAA,CAAkBsE,QAAA,sBAAAI,SAAA","file":"static/js/main.6cd312ab.chunk.js","sourcesContent":["module.exports = \"<p>sass让人们受益的一个重要特性就是它为css引入了变量。你可以把反复使用的css属性值 定义成变量，然后通过变量名来引用它们，而无需重复书写这一属性值。</p>\\n<h5 id=\\\"1、变量声明【使用符号】\\\">1、变量声明;【使用$符号】</h5>\\n<p>当变量定义在css规则块内，那么该变量只能在此规则块内使用。如果它们出现在任何形式的{...}块中（如@media或者@font-face块）中时，只能在块内生效。</p>\\n<pre><code>$highlight-color: #F90;  //变量名使用中划线和下划线都行\\n\\n.login-wrap {\\n  text-align: center;\\n  font-size: 30px;\\n  color:$highlight-color;\\n  border:1px solid $highlight-color\\n}</code></pre><pre><code>$highlight-color: #F90;    //可以在login-wrap外的块中使用\\n\\n.login-wrap {\\n  $width: 30px;\\n  text-align: center;\\n  font-size: $width;    //只能在login-wrap块中使用\\n  color:$highlight-color;\\n}</code></pre><h5 id=\\\"2、css嵌套\\\">2、css嵌套</h5>\\n<p>可以避免重复多次的写父选择器。将嵌套的选择器作为子选择器。</p>\\n<pre><code>.center{\\n  .title{\\n    font-size: 20px;\\n    font-weight: bold;\\n  }\\n\\n  input{\\n    background-color: gray;\\n  }\\n}\\n /* 编译后 */\\n.center .title {\\n   font-size: 20px;\\n   font-weight: bold; \\n}\\n.center input { background-color: gray;}</code></pre><p>群组的嵌套</p>\\n<pre><code>//子元素群组\\n.container {\\n  h1, h2, h3 {margin-bottom: 10px}\\n}\\n编译后\\n.container h1, .container h2, .container h3 { margin-bottom: 10px }</code></pre><pre><code>//父元素群组\\nnav, aside {\\n  a {color: blue}\\n}\\n编译后\\nnav a, aside a {color: blue}</code></pre><h5 id=\\\"3、父元素的引用\\\">3、父元素的引用</h5>\\n<p>有时并不是让嵌套的作为子原则器，而是父选择器的补充，比如:hover,，此时必须使用 父元素的引用符 &amp;, 此时&amp;代表父元素 </p>\\n<pre><code>.center{\\n  input{\\n    background-color: gray;\\n  }\\n\\n  &amp;:hover{ \\n    color:red;\\n  }\\n}\\n编译后\\n.center input{background-color: gray;}\\n.center:hover{color:red;}</code></pre><h5 id=\\\"4、子组合和同胞选择器的使用-、-和--\\\">4、子组合和同胞选择器的使用 &gt;、+ 和 ~ ;</h5>\\n<p>可以把它们放在==外层选择器<strong>后边</strong>==，或==里层选择器<strong>前边</strong>==：</p>\\n<pre><code>article {\\n  ~ article { border-top: 1px dashed #ccc }  //里层选择器前面\\n  &gt; section { background: #eee }\\n  dl &gt; {    //外层选择器前面\\n    dt { color: #333 }\\n    dd { color: #555 }\\n  }\\n  nav + &amp; { margin-top: 0 }\\n}\\n\\n//编译后\\narticle ~ article { border-top: 1px dashed #ccc }\\narticle &gt; footer { background: #eee }\\narticle dl &gt; dt { color: #333 }\\narticle dl &gt; dd { color: #555 }\\nnav + article { margin-top: 0 }</code></pre><h5 id=\\\"5、混合器\\\">5、混合器</h5>\\n<p>通过变量我们可以对单个css值，定义定义和重用，如果对多个css值，都写变量，显得太麻烦，所以使用混合器一次性定义多个。</p>\\n<p><strong>通过@mixin定义， 通过@include使用</strong></p>\\n<pre><code>@mixin rounded-corners {\\n  -moz-border-radius: 50px;\\n  -webkit-border-radius: 50px;\\n  border-radius: 50px;\\n}\\n\\n.center{\\n  input{\\n    background-color: gray;\\n    @include rounded-corners;\\n  }\\n}\\n编译后\\n.center{\\n  input{\\n    background-color: gray;\\n    -moz-border-radius: 50px;\\n    -webkit-border-radius: 50px;\\n    border-radius: 50px;\\n  }\\n}</code></pre><p>可以给混合器传参</p>\\n<pre><code>@mixin rounded-corners($normal) {\\n  -moz-border-radius: $normal;\\n  -webkit-border-radius: $normal;\\n  border-radius: $normal;\\n}\\n\\n.center{\\n  input{\\n    background-color: gray;\\n    @include rounded-corners(50%);\\n  }\\n}</code></pre><h5 id=\\\"6、继承\\\">6、继承</h5>\\n<p>变量是基于单个 css 属性的，mixin是基于多个css属性的，并且这两个都是同属一个css样式文件才生效，</p>\\n<p>而继承是基于css类的，可以在不同的css文件间使用，既可以给自身的选择器用，也可以给继承的后代选择器用</p>\\n<pre><code>//1.css\\n@mixin rounded-corners($normal) {\\n  -moz-border-radius: $normal;\\n  -webkit-border-radius: $normal;\\n  border-radius: $normal;\\n}\\n\\n.center{  //可用于class为center的元素\\n  .title{\\n    font-size: 20px;\\n    font-weight: bold;\\n  }\\n  input{\\n    background-color: gray;\\n    @include rounded-corners(50%);   //使用混合器\\n  }\\n  &amp;:hover{\\n    color:red;\\n  }\\n}</code></pre><pre><code>//2.css\\n.password {\\n  @extend .center;      //继承.center的所有样式。\\n  box-shadow: 0 0 0 10px red inset;\\n}</code></pre><p>不仅会继承.center自身的所有样式，任何跟.center有关的组合选择器样式也会被.password 以组合选择器的形式继承</p>\\n<pre><code>//不要使用后代选择器去继承\\n.password .text{   //不推荐\\n  @extend .center;\\n}</code></pre><p>extend-Only 选择器【将原来的“ . ”使用“ % ”定义，只用于继承，不会给某个元素用】</p>\\n<pre><code>%center{  //只用于@extend的使用，不会给class为center的元素用，况且此时也不是class样式了\\n  input{\\n    background-color: gray;\\n    @include rounded-corners(50%);\\n  }\\n  &amp;:hover{\\n    color:red;\\n  }\\n}\\n.password {\\n  @extend %center;\\n  box-shadow: 0 0 0 10px red inset;\\n}</code></pre>\";","module.exports = \"<h2 id=\\\"1、flex布局是什么？\\\">1、flex布局是什么？</h2>\\n<p>任何一个容器都可以指定为Flex布局。</p>\\n<p>适用场景: <strong>只要与居中相关的，水平居中，垂直居中，或者水平垂直居中，都可以使用flex布局</strong></p>\\n<pre><code>.box{\\n  display: flex;\\n}\\n//或者行内级别(其他行内元素可以直接跟在行末尾)\\n.box{\\n  display: inline-flex;\\n}</code></pre><p>此时子元素无法再使用==float==、==clear==和==vertical-align==属性,\\n<strong>但其中的子元素同样可以设置长和宽等属性</strong></p>\\n<p>==注意==:<strong>默认情况下子项目在“纵轴”方向的高度是自动伸展铺满的，除非给子项目指定具体的height值。 可通过align-items改变默认值</strong></p>\\n<h2 id=\\\"2、flex容器的属性\\\">2、flex容器的属性</h2>\\n<ul>\\n<li>flex-direction    【决定主轴的方向（即项目的排列方向）】</li>\\n<li>flex-wrap  【决定在主轴上排不下，如何换行】</li>\\n<li>justify-content  【项目在主轴上的对齐方式】</li>\\n<li>align-items  【项目在纵轴上的对齐方式】</li>\\n<li>align-content  【多根主轴时项目在纵轴的对齐方式，如果项目只有一根主轴线，该属性不起作用】</li>\\n</ul>\\n<p>其中前4种最常用。</p>\\n<h4 id=\\\"21、flex-direction属性\\\">2.1、flex-direction属性</h4>\\n<pre><code>.box {\\n  flex-direction: row | row-reverse | column | column-reverse;\\n}\\n\\n/**\\nrow（默认值）：主轴为水平方向，起点在左端。\\nrow-reverse：主轴为水平方向，起点在右端。\\ncolumn：主轴为垂直方向，起点在上沿。\\ncolumn-reverse：主轴为垂直方向，起点在下沿。\\n*/</code></pre><ul>\\n<li>如果子元素不定高，则值为row|row-reverse时，默认高度自动铺满容器。（    align-items: stretch;）</li>\\n</ul>\\n<p><img src=\\\"https://github.com/libbGit/static-file/blob/master/image/flex/flex-direction-row.png?raw=true\\\" alt=\\\"image\\\"></p>\\n<ul>\\n<li>如果子元素不定宽，则值为column|column-reverse时，默认宽度自动铺满容器。（    align-items: stretch;）</li>\\n</ul>\\n<p><img src=\\\"https://github.com/libbGit/static-file/blob/master/image/flex/flex-direction-column.png?raw=true\\\" alt=\\\"image\\\"></p>\\n<ul>\\n<li>如果子元素定宽和高，则宽/高度使用自己定义的。</li>\\n</ul>\\n<p><img src=\\\"https://github.com/libbGit/static-file/blob/master/image/flex/flex-direction-column-width.png?raw=true\\\" alt=\\\"image\\\"></p>\\n<h4 id=\\\"22、flex-wrap属性\\\">2.2、flex-wrap属性</h4>\\n<p>默认情况下，项目都排在一条主轴线上。flex-wrap属性定义，如果一条轴线排不下，如何换行。</p>\\n<pre><code>.box{\\n  flex-wrap: nowrap | wrap | wrap-reverse;\\n}\\n\\n/**\\nnowrap（默认值）：如果排列不下时，会按照子项目的实际宽度比例，等比缩小，然后排下\\n*/</code></pre><ul>\\n<li>值为wrap</li>\\n</ul>\\n<p><img src=\\\"https://github.com/libbGit/static-file/blob/master/image/flex/flex-wrap-no.png?raw=true\\\" alt=\\\"image\\\"></p>\\n<ul>\\n<li>值为nowrap</li>\\n</ul>\\n<p><img src=\\\"https://github.com/libbGit/static-file/blob/master/image/flex/flex-wrap.png?raw=true\\\" alt=\\\"image\\\"></p>\\n<h4 id=\\\"23、justify-content属性\\\">2.3、justify-content属性</h4>\\n<p>定义了项目在主轴上的对齐方式。</p>\\n<pre><code>.box {\\n  justify-content: flex-start | flex-end | center | space-between | space-around;\\n}\\n\\n/**\\nspace-between：两端对齐，项目之间的间隔都相等【即开始和尾部贴边】。\\nspace-around：每个项目两侧的间隔相等【不贴边】。\\n*/</code></pre><h4 id=\\\"24、align-items属性\\\">2.4、align-items属性</h4>\\n<p>定义项目在纵轴上如何对齐</p>\\n<pre><code>.box {\\n  align-items: flex-start | flex-end | center | baseline | stretch;\\n}\\n\\n/**\\nstretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。\\nflex-start：交叉轴的起点对齐【不会占满整个宽度，而是采用实际宽度】。\\nflex-end：交叉轴的终点对齐【不会占满整个宽度，而是采用实际宽度】。\\ncenter：交叉轴的中点对齐【不会占满整个宽度，而是采用实际宽度】。\\nbaseline: 项目的第一行文字的基线对齐【不会占满整个宽度，而是采用实际宽度】。\\n*/</code></pre><h2 id=\\\"3、flex容器内部的项目的属性\\\">3、flex容器内部的项目的属性</h2>\\n<ul>\\n<li>flex  该项目在“主轴”上如何填充空白区域</li>\\n<li>align-self  允许单个项目有与其他项目不一样的“纵轴”对齐方式，可覆盖align-items属性</li>\\n</ul>\\n<h4 id=\\\"31、flex属性\\\">3.1、flex属性</h4>\\n<pre><code>.item {\\n  flex: none | auto\\n\\n}\\n\\n/**\\n建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。\\nauto: 表示将此项目伸展并占满空白区域\\nnone：不填充空白区域\\n*/</code></pre><p><img src=\\\"https://github.com/libbGit/static-file/blob/master/image/flex/flex-item-auto.png?raw=true\\\" alt=\\\"image\\\"></p>\\n<h4 id=\\\"32、align-self属性\\\">3.2、align-self属性</h4>\\n<pre><code>.item {\\n  align-self: auto | flex-start | flex-end | center | baseline | stretch;\\n}\\n\\n/**\\nauto：（默认）继承父元素的align-items属性，如果父元素没定义，则使用父元素默认的，即stretch\\n*/</code></pre><p><img src=\\\"https://github.com/libbGit/static-file/blob/master/image/flex/flex-align-self.png?raw=true\\\" alt=\\\"image\\\"></p>\\n\";","module.exports = \"<h2 id=\\\"一、居中布局\\\">一、居中布局</h2>\\n<h4 id=\\\"1、水平居中\\\">1、水平居中</h4>\\n<h6 id=\\\"a、inline-block--text-align\\\">a、inline-block + text-align</h6>\\n<pre><code>//css\\n.parent{\\n    text-align: center;\\n}\\n.child{\\n    display: inline-block;\\n}\\n\\n//html\\n&lt;div class=&quot;parent&quot;&gt;\\n    &lt;div class=&quot;child&quot;&gt;Demo&lt;/div&gt;\\n&lt;/div&gt;</code></pre><p>Tips：兼容至IE8.</p>\\n<p><img src=\\\"https://github.com/libbGit/static-file/blob/master/image/layout/horizontal-center.png?raw=true\\\" alt=\\\"image\\\"></p>\\n<h6 id=\\\"b、table--margin\\\">b、table + margin</h6>\\n<pre><code>//css\\n.child{\\n    display: table;\\n    margin: 0 auto;\\n}\\n\\n//html\\n&lt;div&gt;\\n    &lt;div class=&quot;child&quot;&gt;Demo&lt;/div&gt;\\n&lt;/div&gt;</code></pre><p>Tips：兼容至IE8.</p>\\n<p><img src=\\\"https://github.com/libbGit/static-file/blob/master/image/layout/horizontal-center.png?raw=true\\\" alt=\\\"image\\\"></p>\\n<h6 id=\\\"c、absolute--transform\\\">c、absolute + transform</h6>\\n<pre><code>//css\\n.parent{\\n    position: relative;\\n    height: 30px;\\n    width:200px;\\n}\\n.child{\\n    position: absolute;\\n    left:50%;\\n    transform: translateX(-50%);\\n}\\n\\n//html\\n&lt;div class=&quot;parent&quot;&gt;\\n    &lt;div class=&quot;child&quot;&gt;Demo&lt;/div&gt;\\n&lt;/div&gt;</code></pre><p>Tips：可兼容至IE9，因为transform限制。</p>\\n<p><img src=\\\"https://github.com/libbGit/static-file/blob/master/image/layout/horizontal-center.png?raw=true\\\" alt=\\\"image\\\"></p>\\n<h6 id=\\\"d、flex----justify-content\\\">d、flex  +  justify-content</h6>\\n<pre><code>//css\\n.parent{\\n    display: flex;\\n    justify-content: center;\\n}\\n\\n//html\\n&lt;div class=&quot;parent&quot;&gt;\\n    &lt;div&gt;Demo&lt;/div&gt;\\n&lt;/div&gt;</code></pre><p>Tips：可兼容至IE10，但flex提供的布局很强大。</p>\\n<p><img src=\\\"https://github.com/libbGit/static-file/blob/master/image/layout/horizontal-center.png?raw=true\\\" alt=\\\"image\\\"></p>\\n<h4 id=\\\"2、垂直居中\\\">2、垂直居中</h4>\\n<h6 id=\\\"a、tablet-cell--vertical-align\\\">a、tablet-cell + vertical-align</h6>\\n<pre><code>//css\\n.child{\\n    display: table-cell;\\n    vertical-align: middle;\\n    height: 100px;\\n}\\n\\n//html\\n&lt;div&gt;\\n    &lt;div class=&quot;child&quot;&gt;Demo&lt;/div&gt;\\n&lt;/div&gt;</code></pre><p><img src=\\\"https://github.com/libbGit/static-file/blob/master/image/layout/vertical-middle.png?raw=true\\\" alt=\\\"image\\\"></p>\\n<h6 id=\\\"b、absolute--transform\\\">b、absolute + transform</h6>\\n<pre><code>//css\\n.parent{\\n    position: relative;\\n\\n    width: 80px;\\n    height: 120px;\\n}\\n.child{\\n    position: absolute;\\n    top: 50%;\\n    transform:translateY(-50%);\\n}\\n\\n\\n//html\\n&lt;div class=&quot;parent&quot;&gt;\\n    &lt;div class=&quot;child&quot;&gt;Demo&lt;/div&gt;\\n&lt;/div&gt;</code></pre><p><img src=\\\"https://github.com/libbGit/static-file/blob/master/image/layout/vertical-middle.png?raw=true\\\" alt=\\\"image\\\"></p>\\n<h6 id=\\\"c、flex--align-items\\\">c、flex + align-items</h6>\\n<pre><code>//css\\n.parent{\\n    display: flex;\\n    align-items: center;\\n\\n    width: 80px;\\n    height: 120px;\\n}\\n\\n//html\\n&lt;div class=&quot;parent&quot;&gt;\\n    &lt;div&gt;Demo&lt;/div&gt;\\n&lt;/div&gt;</code></pre><p><img src=\\\"https://github.com/libbGit/static-file/blob/master/image/layout/vertical-middle.png?raw=true\\\" alt=\\\"image\\\"></p>\\n<h4 id=\\\"3、水平垂直居中\\\">3、水平垂直居中</h4>\\n<h6 id=\\\"a、absolute--transform\\\">a、absolute + transform</h6>\\n<pre><code>//css\\n.parent{\\n    position: relative;\\n\\n    width: 120px;\\n    height: 80px;\\n}\\n.child{\\n    position: absolute;\\n    left: 50%;\\n    top: 50%;\\n    transform: translate(-50%,-50%);\\n}\\n\\n//html\\n&lt;div class=&quot;parent&quot;&gt;\\n    &lt;div class=&quot;child&quot;&gt;Demo&lt;/div&gt;\\n&lt;/div&gt;</code></pre><p><img src=\\\"https://github.com/libbGit/static-file/blob/master/image/layout/center.png?raw=true\\\" alt=\\\"image\\\"></p>\\n<h6 id=\\\"b、flex\\\">b、flex</h6>\\n<p>方案1</p>\\n<pre><code>//css\\n.parent{\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n\\n    width: 120px;\\n    height: 80px;\\n}\\n\\n//html\\n&lt;div class=&quot;parent&quot;&gt;\\n    &lt;div&gt;Demo&lt;/div&gt;\\n&lt;/div&gt;</code></pre><p>方案2</p>\\n<pre><code>.parent{\\n    display: flex;\\n    height: 300px;\\n    width: 200px;\\n}\\n.child {\\n    margin: auto; \\n}\\n\\n//html\\n&lt;div class=&quot;parent&quot;&gt;\\n    &lt;div class=&quot;child&quot;&gt;Demo&lt;/div&gt;\\n&lt;/div&gt;</code></pre><p><img src=\\\"https://github.com/libbGit/static-file/blob/master/image/layout/center.png?raw=true\\\" alt=\\\"image\\\"></p>\\n<h2 id=\\\"二、多列布局\\\">二、多列布局</h2>\\n<p>一列定宽，一列自适应</p>\\n<pre><code>//css\\n.container{\\n   display: flex;\\n}\\n.left{\\n    width: 100px;\\n    margin-right: 20px;\\n}\\n.right{\\n    flex: 1;\\n}\\n\\n//html\\n&lt;div class=&quot;container&quot;&gt;\\n    &lt;div class=&quot;left&quot;&gt;left&lt;/div&gt;\\n    &lt;div class=&quot;right&quot;&gt;\\n        &lt;div&gt;right1&lt;/div&gt;\\n        &lt;div&gt;right2&lt;/div&gt;\\n    &lt;/div&gt;\\n&lt;/div&gt;</code></pre><p><img src=\\\"https://github.com/libbGit/static-file/blob/master/image/layout/muti-column.png?raw=true\\\" alt=\\\"image\\\"></p>\\n<h2 id=\\\"三、等分布局\\\">三、等分布局</h2>\\n<pre><code>//css\\n.parent {\\n    display: flex;\\n}\\n\\n.column {\\n    flex: 1;\\n}\\n\\n//html\\n&lt;div class=&quot;parent&quot;&gt;\\n    &lt;div class=&quot;column&quot;&gt;column 1&lt;/div&gt;\\n    &lt;div class=&quot;column&quot;&gt;column 2&lt;/div&gt;\\n    &lt;div class=&quot;column&quot;&gt;column 3&lt;/div&gt;\\n    &lt;div class=&quot;column&quot;&gt;column 4&lt;/div&gt;\\n&lt;/div&gt;</code></pre><p><img src=\\\"https://github.com/libbGit/static-file/blob/master/image/layout/same-column.png?raw=true\\\" alt=\\\"image\\\"></p>\\n\";","module.exports = \"<p>BEM的意思就是块（block）、元素（element）、修饰符（modifier）</p>\\n<p>## </p>\\n<p>命名约定的模式如下：</p>\\n<pre><code>.block{}  \\n.block__element{}  \\n.block--modifier{}  </code></pre><ul>\\n<li>.block 代表了更高级别的抽象或组件。</li>\\n<li>.block__element 代表.block的后代，用于形成一个完整的.block的整体。</li>\\n<li>.block--modifier代表.block的不同状态或不同版本,是改变某个块的外观(颜色，背景，边框，阴影等)的标志。</li>\\n</ul>\\n<pre><code>block的类型例如   header, container, menu, checkbox, input\\nelement的类型例如  menu item, list item, checkbox caption, header title\\nmodifier的类型例如  disabled, highlighted, checked, fixed, size big, color yellow</code></pre><p>之所以使用两个连字符和下划线而不是一个，是为了在给block或者element起名时，可以在中间加入-或者_,如:</p>\\n<pre><code>.site-search{} /* 块 */  \\n.site-search__field{} /* 元素 */  \\n.site-search--full{} /* 修饰符 */    \\n.el-button--primary{}  </code></pre><p>BEM的关键是光凭名字就可以告诉其他开发者某个标记是用来干什么的。</p>\\n<p>下面是个常规的class使用:</p>\\n<pre><code>&lt;form class=&quot;form&quot;&gt;  \\n  &lt;div class=&quot;register&quot;&gt;\\n      &lt;input type=&quot;text&quot;&gt;  \\n  &lt;/div&gt;\\n  &lt;input type=&quot;Submit&quot; value =&quot;Search&quot; class=&quot;button&quot;&gt;  \\n&lt;/form&gt;   </code></pre><pre><code>.form{\\n    width:200px;\\n    padding:2px;\\n}\\n.form .register{\\n    width:50px;\\n    padding:2px;\\n\\n}\\n.form .button{\\n    width:50px;\\n    padding:2px;\\n    background-color:blue;\\n}</code></pre><p>如果改造成BEM，则变成下面:</p>\\n<pre><code>&lt;form class=&quot;form&quot;&gt;  \\n  &lt;div class=&quot;form__register&quot;&gt;\\n      &lt;input type=&quot;text&quot;&gt;  \\n  &lt;/div&gt;\\n  &lt;input type=&quot;Submit&quot; value =&quot;Search&quot; class=&quot;button button--primary&quot;&gt;\\n&lt;/form&gt;   </code></pre><p>对应的css</p>\\n<pre><code>.form{\\n    width:200px;\\n    padding:2px;\\n}\\n.form__register{   //register作为独立的form后代的block块\\n    width:50px;\\n    padding:2px;\\n}\\n.button{        //button只是个独立的样式，并不属于form自身。所以没必要用form__buttom\\n    width:50px;\\n    padding:2px;\\n}\\n.button--primary{\\n    background-color:blue;\\n}\\n</code></pre><p>我们同样可以看到下面的代码， person是个高级别的组件，而手是人的一部分，所属于人，单独的手是不存在的，所以person__hand， 而人有男有女，用来修饰人，person--female， 同样，男人有手，女人也有，person--female__hand，手是男人或者女人的一部分。\\n最后，一个人的手有左右之分，person__hand--left，用left修饰person__hand。\\n而人的手里拿着苹果apple，这个苹果不是人的一部分，放在任何位置都是个苹果。\\n所以独立使用apple，而不用person__apple写法。</p>\\n<pre><code>.person{}  \\n.person__hand{}  \\n.person--female{}  \\n.person--female__hand{}  \\n.person__hand--left{}\\n\\n.apple{\\n\\n}</code></pre>\";","module.exports = \"<h3 id=\\\"1、定位\\\">1、定位</h3>\\n<ul>\\n<li>static     默认定位，属性top，left，z-index等无效</li>\\n<li>absolute   绝对定位，脱离常规流，后面的元素跟上来。top、left参考离此元素最近的具有absolute、relative或fixed定位的父类，如果父类都没有定位，则参考body</li>\\n<li>fixed          固定定位，脱离常规流，后面的元素跟上来。top、left参考body，并且固定在屏幕，不随滚动条的滚动而上下移动。</li>\\n<li>relative   相对定位，不脱离常规流。top、left参考本元素。</li>\\n</ul>\\n<p>z-index适用于已经定位的元素。</p>\\n<p>堆叠顺序如下（从下到上）</p>\\n<ul>\\n<li>1、根元素（即HTML元素）的background和borders</li>\\n<li>2、正常流中非定位后代元素（这些元素顺序按照HTML文档出现顺序）</li>\\n<li>3、浮动元素(浮动元素之间是不会出现z-index重叠的)</li>\\n<li>4、已定位后代元素（这些元素顺序按照HTML文档出现顺序）</li>\\n</ul>\\n<p><strong>使用 z-index后，4种已定位元素不会按照html文档顺序堆叠，而会按照堆叠上下文堆叠；在每个独立的堆叠上下文中，元素可以自定义子元素自身的堆叠上下文，但子元素堆叠顺序不能超出父元素堆叠上下文。剩下的其他非定位还是按照原来的方式。</strong>\\n<img src=\\\"https://github.com/libbGit/static-file/blob/master/image/position-context.png?raw=true\\\" alt=\\\"image\\\"></p>\\n<p>产生堆叠上下文的几种情形:</p>\\n<ul>\\n<li>1、根元素（即HTML元素）</li>\\n<li>2、已定位元素，并且z-index不是默认的auto。</li>\\n<li>3、元素transform不为none</li>\\n<li>4、元素filter属性不为none</li>\\n</ul>\\n<h3 id=\\\"2、浮动\\\">2、浮动</h3>\\n<p>当一个div中的两个元素浮动之后，此时父元素div的高度就会塌陷，此时div的高度为0。</p>\\n<p>清除浮动的方式:</p>\\n<ul>\\n<li>1、浮动元素最后的兄弟元素添加clear:both;</li>\\n<li>2、浮动元素的容器(父元素)添加overflow:hidden;或overflow:auto;</li>\\n<li>3、浮动元素的容器(父元素)添加伪元素:after清除浮动（推荐）<pre><code>.clearfix:after{\\ncontent: &quot;&quot;; \\ndisplay: block; \\nheight: 0; \\nclear: both; \\nvisibility: hidden;  \\n}</code></pre></li>\\n</ul>\\n<h3 id=\\\"3、块级元素和行内元素\\\">3、块级元素和行内元素</h3>\\n<ul>\\n<li>1、块级元素独自占一行且宽度会占满父元素宽度。行内元素不会独占一行，相邻行内元素可以排在同一行；</li>\\n<li>2、块级元素可以设置weith和height。行内元素设置width和height无效；</li>\\n<li>3、块级元素可以设置margin和padding属性，而行内元素水平方向的margin和padding如margin-left、padding-right可以产生边距效果，但是竖直方向的如padding-top和margin-bottom不会产生边距效果。</li>\\n</ul>\\n<p><strong>注意:</strong></p>\\n<p>1、margin 和 padding 的百分比值是以父元素的宽度作为参考基准的, \\n    即使对于margin-top 和margin-bottom，padding-top和padding-bottom 来说也是这样。</p>\\n<p>2、而position中的top、left是按照父元素的高和宽定义的。</p>\\n<p>body的宽度默认为视口宽度，即100vw，而body高度默认为0(可以设置为100vh)，随着子元素的高度而自适应。</p>\\n<h3 id=\\\"4、css优先级\\\">4、css优先级</h3>\\n<pre><code>!important &gt; style &gt; id &gt; class &gt; tag\\n\\n例如:\\ndiv{} //权重为1\\n.class1{}  //权重10\\n#d1{}  //  权重100\\n行内   //  权重 1000\\n!important  //权重正无穷\\n\\n#d1 div{}  //100+1=101</code></pre><p>在html的元素上的css谁的权重大，则使用谁的样式；如果权重相同，则使用最后定义的。\\n<img src=\\\"https://github.com/libbGit/static-file/blob/master/image/css-important.png?raw=true\\\" alt=\\\"image\\\"></p>\\n<h3 id=\\\"5、清除行内元素之间的空白\\\">5、清除行内元素之间的空白</h3>\\n<p>inline-block的元素之间会受空白区域的影响，元素之间差不多会有一个字符的间隙。如果在同一行内有4个25%相同宽度的元素，会导致最后一个元素掉下来。</p>\\n<p>解决方案:</p>\\n<ul>\\n<li>1、使用浮动float</li>\\n<li>2、设置父元素的font-size属性为0，然后对子元素重新设定font-size (推荐)</li>\\n</ul>\\n<h3 id=\\\"6、pointer-events的使用\\\">6、pointer-events的使用</h3>\\n<pre><code>.disabled{\\n  pointer-events: none;\\n}\\n</code></pre><p>利用该属性，可以做如下的事情:</p>\\n<ul>\\n<li>阻止该元素上任何点击事件的执行</li>\\n<li>使该元素上链接显示为默认光标</li>\\n<li>阻止该元素触发hover和active状态</li>\\n</ul>\\n<p>在定位的多图层间避免触发其他事件有很好的效果。</p>\\n<h3 id=\\\"7、响应式设计：\\\">7、响应式设计：</h3>\\n<ul>\\n<li>1、使用百分比长度来取代固定长度。如果实在做不到这一点，也应该尝试使用与视口相关的单位（vw、vh、vmin 和vmax）或者calc(100% - 30px)得出的值，\\n它们的值解析为视口宽度或高度的百分比。</li>\\n<li>2、 当你需要在较大分辨率下得到固定宽度时，使用 max-width 而不是width，因为它可以适应较小的分辨率，而无需使用媒体查询</li>\\n<li>3、 不要忘记为替换元素（比如 img、object、video、iframe 等）设置一个max-width，值为100%。防止撑破容器。</li>\\n</ul>\\n<p>轻易不要用媒体查询，媒体查询使用于在特定的窗口下，单一元素的位置和大小发生了与布局相关的形变。比如竖的变为横的。圆的变为方的，上一行的掉到了第二行等。</p>\\n<p><strong>总的来说，我们的思路是尽最大努力实现==弹性可伸缩的布局==，并在与布局形变有关的特定屏幕尺寸下使用媒体查询</strong></p>\\n<h3 id=\\\"9、css中的内置变量和函数：\\\">9、css中的内置变量和函数：</h3>\\n<ul>\\n<li>currentColor  当前的标签所继承的==文字颜色==</li>\\n<li>inherit  防止浏览器使用默认的样式，而显式的定义为父元素的样式。</li>\\n<li>initial  初始化为浏览器默认的样式</li>\\n</ul>\\n<p>attr()</p>\\n<pre><code>&lt;span data-text=&quot;123456789&quot;&gt;&lt;/span&gt;\\nspan:before{\\n   content: attr(data-text);  //将span的data-text属性的值设置到content上\\n}</code></pre><p>url()</p>\\n<pre><code>background-image: url(&quot;logo.png&quot;);</code></pre><p>calc()</p>\\n<pre><code>width: calc(100% - 29px); //减号前后，必须留一个空格\\nwidth: calc(100vw - 29px);</code></pre><h3 id=\\\"10、boder，-box-shadow，outline\\\">10、boder， box-shadow，outline</h3>\\n<p>这三个中只有boder影响布局，其他都不会影响布局。</p>\\n<h3 id=\\\"11、css中的百分比值\\\">11、css中的百分比值</h3>\\n<p>margin-top, margin-bottom和margin-right, margin-left一样，它的百分值 参考的是父元素的 宽度(不是高度)</p>\\n<p>padding-top, padding-bottom和padding-right, padding-left一样，它的百分值 参考的是父元素的 宽度(不是高度)</p>\\n<p>而 position中 top和bottom 它的百分值 参考的是父元素的 高度 left和right 它的百分值 参考的是父元素的 宽度</p>\\n<p>元素按照display， position，float的顺序渲染， 如果dispaly为none，则position和float都不执行，否则开始执行position； 如果position的值为absolute或者fixed，那么float则不执行，元素的位置由top，right等决定。 如果position为其他值，则开始执行float</p>\\n<p>line-height的百分值 参考的是自身元素的font-size大小。</p>\\n<p>background-position的以左上角为基准点 0% 0%</p>\\n\";","module.exports = \"<h2 id=\\\"es6之asyncawait\\\">ES6之async/await</h2>\\n<p>如果要使一个函数变成async/await的形式，必须要做两步:</p>\\n<blockquote>\\n<p>1、直接在普通函数前面加上async，表示这是一个异步函数\\n(任何普通函数可以调用async函数, 结果.then)</p>\\n<p>2、在函数内部 的异步执行的语句前面加上await\\n(后面可以跟promise或者任意类型的值)</p>\\n</blockquote>\\n<h5 id=\\\"1、async的多种声明形式\\\">1、async的多种声明形式</h5>\\n<pre><code>//函数式声明\\nasync function test() {}</code></pre><pre><code>//对象式声明\\nlet obj = {\\n   async test() {}\\n};</code></pre><pre><code>//箭头函数声明\\nlet test = async () =&gt; { }</code></pre><h5 id=\\\"2、await语句的多种调用形式\\\">2、await语句的多种调用形式</h5>\\n<pre><code>//普通语句，首先await a;的表达式的值为a的值，然后再转成一个resolve的promise对象\\nasync function f() {\\n    await 123;   //值为123\\n    let a = await &quot;hello&quot;;  //a的值为“hello”\\n    return a;\\n}</code></pre><pre><code>//promise语句。(1)如果是resolve的。则直接返回resolve中的数据\\ngetPromise() {\\n  return new Promise((resolve, reject) =&gt; {\\n    resolve(&quot;world&quot;);\\n  });\\n}\\nasync getName() {\\n  let p = await this.getPromise();  //p为resolve的promise对象，值为“world”\\n  return p;\\n},</code></pre><pre><code>//promise语句。(2)如果是reject的。则直接返回reject中的数据\\ngetPromise() {\\n  return new Promise((resolve, reject) =&gt; {\\n    reject(new Error(&quot;错误了&quot;));\\n  });\\n}\\nasync getName() {\\n  let p = await this.getPromise();  //p为reject的promise对象，值为“错误了”,后面的语句不会再执行\\n  //to do \\n  return p;\\n},\\n此时要么在async部分捕获错误，并进行处理。要么在调用async语句的地方捕获错误并处理</code></pre><h5 id=\\\"3、await语错误处理\\\">3、await语错误处理</h5>\\n<pre><code>//单条语句的处理\\nasync getName() {\\n  let str = &quot;&quot;;\\n  await this.getPromise().catch(err =&gt; {\\n    str = &quot;world&quot;;\\n  });\\n  return str;\\n}</code></pre><pre><code>//多条语句的处理\\nasync getName() {\\n  let str = &quot;&quot;;\\n  try {\\n    await this.getPromise();\\n    await 123;\\n  } catch (err) {\\n    str = &quot;world1&quot;;\\n  }\\n    return str;\\n}</code></pre><h5 id=\\\"4、await的并行处理\\\">4、await的并行处理</h5>\\n<pre><code>//因为多个await都是依次往后台发送。如果这几个请求之前没有先后关联顺序，则完全没必要。可以做成并行发送\\nasync getName() {\\n  let str = &quot;&quot;;\\n  await Promise.all([this.getPromise(),this.getPromise(),this.getPromise()]);\\n  return str;\\n},</code></pre>\";","module.exports = \"<h3 id=\\\"1、css选择符不能以数字开头\\\">1、css选择符不能以数字开头</h3>\\n<p>[data-date$===20180416==]</p>\\n<pre><code>&lt;div data-date=&quot;20180416&quot;&gt;第一个 div 元素。&lt;/div&gt;\\n\\n[data-date$=20180416]\\n{\\n   background:red;\\n}</code></pre><p>这种出错，\\ndiv元素处的20180416为一个变量。而变量不能以数字开头。虽然可以以\\n$开头，但此处的$符已被占用为判断属性结束的标志。所以需要转义下</p>\\n<pre><code>&lt;div data-date=&quot;$20180416&quot;&gt;第一个 div 元素。&lt;/div&gt;\\n\\n[data-date$=\\\\$20180416]\\n{\\n   background:red;\\n}</code></pre><p>这样就ok了。</p>\\n<h3 id=\\\"2、tofixed不能用作四舍五入\\\">2、toFixed()不能用作四舍五入</h3>\\n<pre><code>(1.115).toFixed(2)   // &quot;1.11&quot;\\n(1.125).toFixed(2)    //&quot;1.13&quot;</code></pre><p>它既不是四舍五入，也不是五舍六入，而是啥都不是。非常不稳定。无法预测。</p>\\n<p>可以用Math.round()或者math.js库。</p>\\n<h3 id=\\\"3、form表单的四种编码方式\\\">3、form表单的四种编码方式</h3>\\n<ul>\\n<li>使用POST方式发送请求，并且enctype=&quot;application/x-www-form-urlencoded&quot;(默认方式)</li>\\n<li>使用POST方式发送请求，并且enctype=&quot;text/plain&quot;</li>\\n<li>使用POST方式发送请求，并且enctype=&quot;multipart/form-data&quot;(二进制上传必须使用此方法)</li>\\n<li>使用GET方式发送请求，自动忽略enctype属性</li>\\n</ul>\\n<pre><code>// 第一种=========================================================\\nContent-Type: application/x-www-form-urlencoded\\nfoo=bar&amp;baz=The+first+line.%0D%0AThe+second+line.%0D%0A\\n\\n// 第二种=========================================================\\nContent-Type: text/plain\\n\\nfoo=bar\\nbaz=The first line.\\nThe second line.\\n\\n// 第三种=========================================================\\nContent-Type: multipart/form-data; boundary=---------------------------314911788813839\\n\\n-----------------------------314911788813839\\nContent-Disposition: form-data; name=&quot;foo&quot;\\n\\nbar\\n-----------------------------314911788813839\\nContent-Disposition: form-data; name=&quot;baz&quot;\\n\\nThe first line.\\nThe second line.\\n\\n-----------------------------314911788813839--\\n\\n// 第四种=========================================================\\n?foo=bar&amp;baz=The%20first%20line.%0AThe%20second%20line.</code></pre><h3 id=\\\"4、文件上传的3种原生方式\\\">4、文件上传的3种原生方式</h3>\\n<ul>\\n<li>post方式，form表单enctype=&quot;multipart/form-data&quot;，通过submit发送数据</li>\\n<li>使用FormData对象，通过XMLHttpRequest发送数据</li>\\n<li>使用FileReader，通过XMLHttpRequest发送数据或其他</li>\\n</ul>\\n<pre><code>//原生js上传文件\\nvar formData = new FormData();\\n\\nformData.append(&quot;username&quot;, &quot;Groucho&quot;);\\n\\n//fileInputElement为文件上传元素\\nformData.append(&quot;userfile&quot;, fileInputElement.files[0]);\\n\\n// JavaScript file-like 对象\\nvar content = &#39;&lt;a id=&quot;a&quot;&gt;&lt;b id=&quot;b&quot;&gt;hey!&lt;/b&gt;&lt;/a&gt;&#39;; // 新文件的正文...\\nvar blob = new Blob([content], { type: &quot;text/xml&quot;});\\n\\nformData.append(&quot;webmasterfile&quot;, blob);\\n\\n\\nvar request = new XMLHttpRequest();\\nrequest.open(&quot;POST&quot;, &quot;http://foo.com/submitform.php&quot;);\\nrequest.send(formData);\\n\\nrequest.addEventListener(&quot;load&quot;, function(e){\\n    //callback\\n    var response = JSON.parse(e.target.responseText);\\n    if (response &amp;&amp; response.ret == 0) {\\n        //success\\n    } else {\\n        //fail\\n    }\\n}, false);\\n\\n/**\\n注意:只有在使用XMLHttpRequest方式时采用FormData或FileReader上传文件。\\n    使用ajax时可以不使用，因为可以使用序列化\\n*/</code></pre><h3 id=\\\"5、动态设置属性名称\\\">5、动态设置属性名称</h3>\\n<p>如果想让属性名通过字符串拼接，然后访问，则使用[],而不是点，因为点无法拼接。</p>\\n<pre><code>var name = &quot;test_&quot;+1;   //生成函数名\\nvar name = &quot;test_&quot;+2;   //生成函数名\\nwindow[name] = 100;  //name会被替换为真实的值 等于window[&quot;test_1&quot;] 等于 window.test_1\\n\\n//window.name 则不会转换name的值，会认为name就是属性名称</code></pre><h3 id=\\\"5、在inputtypefile中对同一个文件，无法重复上传的问题\\\">5、在input[type=file]中对同一个文件，无法重复上传的问题</h3>\\n<p>this.$refs.uploadRef.value = null; </p>\\n\";","var map = {\n\t\"./1.jpg\": 189,\n\t\"./2.jpg\": 190,\n\t\"./b03.jpg\": 191,\n\t\"./config\": 56,\n\t\"./config.json\": 56\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 188;","module.exports = __webpack_public_path__ + \"static/media/1.91c28637.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.b8eb2da4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/b03.4d108e0f.jpg\";","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst todoItem = {\r\n  width: \"100%\",\r\n  border: \"1px solid #c7c7c7\",\r\n  height: \"30px\",\r\n  lineHeight: \"30px\",\r\n  borderRadius: \"4px\",\r\n  padding: \"0 20px\",\r\n  textAlign: \"left\"\r\n};\r\n\r\nclass TodoList extends Component {\r\n  constructor(props, context) {\r\n    super(props);\r\n  }\r\n\r\n  handleDeleteItem = id => {\r\n    this.props.onDelete(id);\r\n  };\r\n\r\n  render() {\r\n    let { list } = this.props;\r\n    return (\r\n      <div>\r\n        {list.map(item => (\r\n          <TodoItem key={item.id} onDeleteItem={() => this.handleDeleteItem(item.id)}>\r\n            {item.name}\r\n          </TodoItem>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {}\r\n}\r\n\r\nlet TodoItem = props => {\r\n  return (\r\n    <div onClick={props.onDeleteItem} style={todoItem}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\n//为属性指定类型检查\r\nTodoList.propTypes = {\r\n  list: PropTypes.array,\r\n  onDelete: PropTypes.func\r\n};\r\n\r\nTodoList.defaultProps = {\r\n  list: []\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { Component } from \"react\";\r\nimport { Input } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// //增加redux\r\n// import { connect } from \"react-redux\";\r\n// import TodoActions from \"@/store/actions/todo\";\r\n// //\r\n\r\nimport TodoList from \"./TodoList\";\r\nimport todoCss from \"./todo.module.scss\";\r\n\r\nclass Todo extends Component {\r\n  constructor(props, context) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      list: []\r\n    };\r\n\r\n    this.inputRef = React.createRef();\r\n  }\r\n\r\n  handlePressEnter = e => {\r\n    this.setState({\r\n      list: [...this.state.list, { id: this.state.list.length + 1, name: e.target.value }]\r\n    });\r\n    this.inputRef.current.state.value = \"\";\r\n\r\n    // this.props.onSaveTodoItem({ id: this.props.list.length + 1, name: e.target.value });\r\n  };\r\n\r\n  handleDeleteItem = id => {\r\n    let list = this.state.list.filter(item => item.id != id);\r\n    this.setState({\r\n      list: list\r\n    });\r\n    // this.props.onDeleteTodoItem(id);\r\n  };\r\n\r\n  render() {\r\n    let { list } = this.state;\r\n    // let { list } = this.props;\r\n\r\n    return (\r\n      <div className={todoCss.content}>\r\n        <div>\r\n          <Input onPressEnter={this.handlePressEnter} ref={this.inputRef}/>\r\n        </div>\r\n\r\n        <div className={todoCss.todoList}>\r\n          <TodoList list={list} onDelete={this.handleDeleteItem} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    // // this.props.onAsyncGetTodoList();\r\n  }\r\n}\r\n\r\n// //为属性指定类型检查\r\n// Todo.propTypes = {\r\n//   list: PropTypes.array,\r\n//   onSaveTodoItem: PropTypes.func,\r\n//   onDeleteTodoItem: PropTypes.func,\r\n//   // onAsyncGetTodoList: PropTypes.func\r\n// };\r\n\r\n\r\nexport default Todo;\r\n\r\n// export default connect(\r\n//   state => ({\r\n//     list: state.Todo.list\r\n//   }),\r\n//   dispatch => ({\r\n//     onSaveTodoItem: item => {\r\n//       dispatch(TodoActions.saveTodoItem(item));\r\n//     },\r\n//     onDeleteTodoItem: id => {\r\n//       dispatch(TodoActions.deleteTodoItem(id));\r\n//     },\r\n//     // onAsyncGetTodoList: param => {\r\n//     //   dispatch(TodoActions.asyncGetTodoList(param));\r\n//     // }\r\n//   })\r\n// )(Todo);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport \"@/assets/css/markdown.scss\";\r\n\r\nclass MarkDown extends Component {\r\n  constructor(props, context) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Markdown className=\"markdown-body\" options={{ forceBlock: true }}>\r\n          {this.props.source}\r\n        </Markdown>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {}\r\n}\r\n\r\n//为属性指定类型检查\r\nMarkDown.propTypes = {\r\n  source: PropTypes.string\r\n};\r\nMarkDown.defaultProps = {\r\n  source: \"暂无内容\"\r\n};\r\n\r\nexport default MarkDown;\r\n","import React, { Component } from \"react\";\r\nimport { Layout, Menu, Carousel, Icon } from \"antd\";\r\n\r\nimport MarkDown from \"@/components/markdown/MarkDown\";\r\nimport scssMarkDown from \"@/assets/markdown/scss.md\";\r\n\r\nclass CssScss extends Component {\r\n  constructor(props, context) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return <MarkDown source={scssMarkDown} />;\r\n  }\r\n\r\n  componentDidMount() {}\r\n}\r\n\r\nexport default CssScss;\r\n","import React, { Component } from \"react\";\r\nimport { Layout, Menu, Carousel, Icon } from \"antd\";\r\n\r\nimport MarkDown from \"@/components/markdown/MarkDown\";\r\nimport flexMarkDown from \"@/assets/markdown/flex.md\";\r\n\r\nclass CssFlex extends Component {\r\n  constructor(props, context) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return <MarkDown source={flexMarkDown} />;\r\n  }\r\n\r\n  componentDidMount() {}\r\n}\r\n\r\nexport default CssFlex;\r\n","import React, { Component } from \"react\";\r\nimport { Layout, Menu, Carousel, Icon } from \"antd\";\r\n\r\nimport MarkDown from \"@/components/markdown/MarkDown\";\r\nimport layoutMarkDown from \"@/assets/markdown/css-layout.md\";\r\n\r\nclass CssScss extends Component {\r\n  constructor(props, context) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return <MarkDown source={layoutMarkDown} />;\r\n  }\r\n\r\n  componentDidMount() {}\r\n}\r\n\r\nexport default CssScss;\r\n","import React, { Component } from \"react\";\r\nimport { Layout, Menu, Carousel, Icon } from \"antd\";\r\n\r\nimport MarkDown from \"@/components/markdown/MarkDown\";\r\nimport bemMarkDown from \"@/assets/markdown/cssBem.md\";\r\n\r\nclass CssBem extends Component {\r\n  constructor(props, context) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return <MarkDown source={bemMarkDown} />;\r\n  }\r\n\r\n  componentDidMount() {}\r\n}\r\n\r\nexport default CssBem;\r\n","import React, { Component } from \"react\";\r\nimport { Layout, Menu, Carousel, Icon } from \"antd\";\r\n\r\nimport MarkDown from \"@/components/markdown/MarkDown\";\r\nimport cssBaseMarkDown from \"@/assets/markdown/cssBase.md\";\r\n\r\nclass CssBase extends Component {\r\n  constructor(props, context) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return <MarkDown source={cssBaseMarkDown} />;\r\n  }\r\n\r\n  componentDidMount() {}\r\n}\r\n\r\nexport default CssBase;\r\n","import React, { Component } from \"react\";\r\nimport { Layout, Menu, Carousel, Icon } from \"antd\";\r\n\r\nimport MarkDown from \"@/components/markdown/MarkDown\";\r\nimport jsEs6AyncMarkDown from \"@/assets/markdown/js-es6-aync.md\";\r\n\r\nclass JsEs6Async extends Component {\r\n  constructor(props, context) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return <MarkDown source={jsEs6AyncMarkDown} />;\r\n  }\r\n\r\n  componentDidMount() {}\r\n}\r\n\r\nexport default JsEs6Async;\r\n","import React, { Component } from \"react\";\r\nimport { Layout, Menu, Carousel, Icon } from \"antd\";\r\n\r\nimport MarkDown from \"@/components/markdown/MarkDown\";\r\nimport jsIssueMarkDown from \"@/assets/markdown/js-issue.md\";\r\n\r\nclass JsIssue extends Component {\r\n  constructor(props, context) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return <MarkDown source={jsIssueMarkDown} />;\r\n  }\r\n\r\n  componentDidMount() {}\r\n}\r\n\r\nexport default JsIssue;\r\n","import React, { Component } from \"react\";\r\nimport { Layout, Menu, Carousel, Icon } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport \"./home.scss\";\r\nimport CssScss from \"@/features/blog/CssScss\";\r\nimport CssFlex from \"@/features/blog/CssFlex\";\r\nimport CssLayout from \"@/features/blog/CssLayout\";\r\nimport CssBem from \"@/features/blog/CssBem\";\r\nimport CssBase from \"@/features/blog/CssBase\";\r\nimport JsEs6Async from \"@/features/blog/JsEs6Async\";\r\nimport JsIssue from \"@/features/blog/JsIssue\";\r\n\r\n\r\nimport carouselConfig from \"@/assets/images/carousel/config.json\";\r\n\r\nclass Home extends Component {\r\n  constructor(props, context) {\r\n    super(props);\r\n  }\r\n\r\n  getCarouselImages = () => {\r\n    return carouselConfig.list.map((item, index) => {\r\n      let image = require(`@/assets/images/carousel/${item}`);\r\n      return (\r\n        <div key={index}>\r\n          <img src={image} className=\"carousel-img\" />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { SubMenu } = Menu;\r\n    const { Header, Content, Footer, Sider } = Layout;\r\n\r\n    let images = this.getCarouselImages();\r\n\r\n    //通过阿里巴巴字体库生成图标\r\n    // const IconFont = Icon.createFromIconfontCN({\r\n    //   scriptUrl: '//at.alicdn.com/t/font_1048945_1n0hcui62yb.js', // 在 iconfont.cn 上生成\r\n    // });\r\n    \r\n    return (\r\n      <>\r\n        <Layout>\r\n          <Header className=\"app-header\">\r\n            <div className=\"logo\" />\r\n            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"2\"]} style={{ lineHeight: \"64px\" }}>\r\n              <Menu.Item key=\"1\">nav 1</Menu.Item>\r\n              <Menu.Item key=\"2\">nav 2</Menu.Item>\r\n              <Menu.Item key=\"3\">nav 3</Menu.Item>\r\n            </Menu>\r\n          </Header>\r\n          <Content className=\"app-main\">\r\n            <div className=\"app-main-summary\">\r\n              <div className=\"carousel\">\r\n                <Carousel autoplay>{images}</Carousel>\r\n              </div>\r\n              <div className=\"information\">\r\n                <div>\r\n                  <h2>我的名片</h2>\r\n                </div>\r\n                <div className=\"email\">\r\n                  <span>职业：Web前端工程师</span>\r\n                  <span>现居：陕西省-西安市</span>\r\n                  <span>Email：lbbyx163@163.com</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <Layout className=\"app-layout\">\r\n              <Content>\r\n                <Layout className=\"app-middle-layout\">\r\n                  <Sider width={250} style={{ background: \"#fff\" }}>\r\n                    <Menu\r\n                      mode=\"inline\"\r\n                      defaultSelectedKeys={[\"1\"]}\r\n                      defaultOpenKeys={[\"sub1\"]}\r\n                      style={{ height: \"100%\" }}\r\n                    >\r\n                      <SubMenu\r\n                        key=\"css\"\r\n                        title={\r\n                          <span>\r\n                            <i class=\"iconfont blog-css\"></i>CSS\r\n                          </span>\r\n                        }\r\n                      >\r\n                        <Menu.Item key=\"css-scss\">\r\n                          <Link to={`${this.props.match.path}/css-scss`}>SCSS简易教程</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"css-flex\">\r\n                          <Link to={`${this.props.match.path}/css-flex`}>Flex布局</Link>\r\n                        </Menu.Item>\r\n                        <Menu.Item key=\"css-layout\"><Link to={`${this.props.match.path}/css-layout`}>CSS常见布局方案</Link></Menu.Item>\r\n                        <Menu.Item key=\"css-bem\"><Link to={`${this.props.match.path}/css-bem`}>CSS命名规范—BEM思想</Link></Menu.Item>\r\n                        <Menu.Item key=\"css-base\"><Link to={`${this.props.match.path}/css-base`}>CSS基础知识</Link></Menu.Item>\r\n                      </SubMenu>\r\n                      <SubMenu\r\n                        key=\"html\"\r\n                        title={\r\n                          <span>\r\n                            <i class=\"iconfont blog-html\"></i>\r\n                            HTML\r\n                          </span>\r\n                        }\r\n                      >\r\n                        <Menu.Item key=\"5\">option5</Menu.Item>\r\n                        <Menu.Item key=\"6\">option6</Menu.Item>\r\n                        <Menu.Item key=\"7\">option7</Menu.Item>\r\n                        <Menu.Item key=\"8\">option8</Menu.Item>\r\n                      </SubMenu>\r\n                      <SubMenu\r\n                        key=\"javascript\"\r\n                        title={\r\n                          <span>\r\n                            <i class=\"iconfont blog-js\"></i>\r\n                            JAVASCRIPT\r\n                          </span>\r\n                        }\r\n                      >\r\n                        <Menu.Item key=\"js-es6-async\"><Link to={`${this.props.match.path}/js-es6-async`}>ES6之async-await</Link></Menu.Item>\r\n                        <Menu.Item key=\"js-issue\"><Link to={`${this.props.match.path}/js-issue`}>JS学习笔记之常见问题</Link></Menu.Item>\r\n                        <Menu.Item key=\"11\">option11</Menu.Item>\r\n                        <Menu.Item key=\"12\">option12</Menu.Item>\r\n                      </SubMenu>\r\n                      <SubMenu\r\n                        key=\"vue\"\r\n                        title={\r\n                          <span>\r\n                            <i class=\"iconfont blog-vue\"></i>\r\n                            VUE\r\n                          </span>\r\n                        }\r\n                      >\r\n                        <Menu.Item key=\"9\">vue常见问题及解决</Menu.Item>\r\n                        <Menu.Item key=\"10\">一个完整的vue组件的内容格式</Menu.Item>\r\n                      </SubMenu>\r\n                      <SubMenu\r\n                        key=\"react\"\r\n                        title={\r\n                          <span>\r\n                            <i class=\"iconfont blog-react\"></i>\r\n                            REACT\r\n                          </span>\r\n                        }\r\n                      >\r\n                        <Menu.Item key=\"9\">option9</Menu.Item>\r\n                        <Menu.Item key=\"10\">option10</Menu.Item>\r\n                        <Menu.Item key=\"11\">option11</Menu.Item>\r\n                        <Menu.Item key=\"12\">option12</Menu.Item>\r\n                      </SubMenu>\r\n                    </Menu>\r\n                  </Sider>\r\n                  <Content className=\"app-layout-content\">\r\n                    <RouteView route={this.props.match.path} />\r\n                  </Content>\r\n                </Layout>\r\n              </Content>\r\n            </Layout>\r\n          </Content>\r\n          <Footer className=\"app-footer\">Ant Design ©2018 Created by Ant UED</Footer>\r\n        </Layout>\r\n      </>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    // // this.props.onAsyncGetTodoList();\r\n  }\r\n}\r\n\r\nlet RouteView = props => {\r\n  if (!props.route) {\r\n    return null;\r\n  }\r\n  return (\r\n    <Switch>\r\n      <Route path={`${props.route}/css-scss`} component={CssScss} />\r\n      <Route path={`${props.route}/css-flex`} component={CssFlex} />\r\n      <Route path={`${props.route}/css-layout`} component={CssLayout} />\r\n      <Route path={`${props.route}/css-bem`} component={CssBem} />\r\n      <Route path={`${props.route}/css-base`} component={CssBase} />\r\n      <Route path={`${props.route}/js-es6-async`} component={JsEs6Async} />\r\n      <Route path={`${props.route}/js-issue`} component={JsIssue} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\nimport { Switch, Route, Link, withRouter, Redirect } from \"react-router-dom\";\n\nimport Todo from \"@/features/todo/Todo\";\n\nimport Home from \"@/features/home/Home\";\n\nclass App extends Component {\n  constructor(props, context) {\n    super(props);\n\n    this.state = {\n      loggedIn: true\n    };\n  }\n  render() {\n    return (\n      <div className=\"\">\n        <RouteView loggedIn={this.state.loggedIn} />\n      </div>\n    );\n  }\n}\n\nlet RouteView = props => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" render={() => (props.loggedIn ? <Redirect to=\"/home\" /> : <Redirect to=\"/login\" />)} />\n      <Route path=\"/home\" component={Home} />\n      <Route path=\"/todo\" component={Todo} />\n    </Switch>\n  );\n};\n\nexport default withRouter(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"@/assets/css/index.scss\";\nimport \"moment/locale/zh-cn\"; //解决antd中日历上的月份为11月，而不是Nov\n\nimport App from \"@/App\";\n// import * as serviceWorker from \"@/serviceWorker\";\n\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\n\n// import { Provider } from \"react-redux\";\n// import store from \"@/store\";\nReactDOM.render(\n  // <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  // </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"todo_content__1gqwp\",\"todoList\":\"todo_todoList__39KQ5\"};"],"sourceRoot":""}